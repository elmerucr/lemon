                      ; ----------------------------------------------------------------------
                      ; rom.s (compiles with asm6809)
                      ; lime
                      ;
                      ; Copyright (C)2025 elmerucr
                      ; ----------------------------------------------------------------------
                      
0000                          setdp   $00             ; assembler now assumes dp = $00 and
                                                      ; uses dp addressing when appropriate
                      
FF00                          org     $ff00
                      
FF00  6C696D6520726F6D2076302E3220323032353032303500         fcn     "lime rom v0.2 20250205"
FF17                  reset
FF17  10CE0200                lds     #$0200          ; sets system stackpointer + enables nmi
FF1B  CEFF00                  ldu     #$ff00          ; sets user stackpointer
                      
FF1E  9600                    lda     $00             ; make font visible to cpu
FF20  8A02                    ora     #%00000010
FF22  9700                    sta     $00
                      
FF24  8E1000                  ldx     #$1000          ; copy font from rom to ram
FF27  A684            1       lda     ,x
FF29  A780                    sta     ,x+
FF2B  8C2000                  cmpx    #$2000
FF2E  26F7                    bne     1b
                      
FF30  9600                    lda     $00             ; only rom remains visible to cpu
FF32  84FD                    anda    #%11111101
FF34  9700                    sta     $00
                      
                      ; ----------------------------------------------------------------------
                      ; place logo
                      ; ----------------------------------------------------------------------
FF36  5F                      clrb                    ; holds current sprite
FF37  8EFF91                  ldx     #logo_data      ; x points to start of data
FF3A  F70407          1       stb     $0407           ; set active sprite
FF3D  108E0418                ldy     #$0418          ; y points to sprite registers
FF41  A680            2       lda     ,x+             ; copy data
FF43  A7A0                    sta     ,y+
FF45  108C041C                cmpy    #$041c          ; did we copy 4 values?
FF49  26F6                    bne     2b              ; not yet, continue at 2
FF4B  5C                      incb                    ; we did, set next active sprite
FF4C  8CFFB1                  cmpx    #logo_data+32   ; did we reach end of data?
FF4F  26E9                    bne     1b              ; no, continue at 1
                      
                      ; ---------------
                      ; do jump vectors
                      ; ---------------
FF51  8EFFB1                  ldx     #exc_irq
FF54  BF0200                  stx     $0200
                      
FF57  BDFF68                  jsr     sound_reset
                      
FF5A  BDFF5F          3       jsr     test
FF5D  20FB                    bra     3b              ; endless loop
                      
FF5F                  test
FF5F  8634                    lda     #$34
FF61  1F89                    tfr     a,b
FF63  CB01                    addb    #$01
FF65  1F98                    tfr     b,a
FF67  39                      rts
                      
FF68                  sound_reset
FF68  3632                    pshu    y,x,a
FF6A  8E0080                  ldx     #$0080
FF6D  108E0600                ldy     #$0600  ; start of sound
FF71  6FA0            1       clr     ,y+
FF73  301F                    leax    -1,x
FF75  26FA                    bne     1b
                      
FF77  867F                    lda     #$7f    ; mixer at half volume
FF79  8E0010                  ldx     #$0010
FF7C  108E0790                ldy     #$0790  ; start of io mixer
FF80  A7A0            2       sta     ,y+
FF82  301F                    leax    -1,x
FF84  26FA                    bne     2b
                      
FF86  860F                    lda     #$0f    ; set sid volumes to max
FF88  B7061B                  sta     $061b   ; sid 0 volume
FF8B  B7063B                  sta     $063b   ; sid 1 volume
                      
FF8E  3732                    pulu    y,x,a
FF90  39                      rts
                      
                      
FF91                  logo_data
FF91  7040071C                fcb     112,64,%111,$1c ; icon top left
FF95  7840071D                fcb     120,64,%111,$1d ; icon top right
FF99  7048071E                fcb     112,72,%111,$1e ; icon bottom left
FF9D  7848071F                fcb     120,72,%111,$1f ; icon bottom right
                      
FFA1  6B50076C                fcb     107,80,%111,$6c ; l
FFA5  70500769                fcb     112,80,%111,$69 ; i
FFA9  7650076D                fcb     118,80,%111,$6d ; m
FFAD  7E500765                fcb     126,80,%111,$65 ; e
                      
FFB1                  exc_irq
FFB1  3B                      rti
                      
FFB2  6E9F0200        1       jmp     [$0200]
                      
FFF0                          org     $fff0
FFF0                  vectors
FFF0  0000                    fdb     $0000
FFF2  0000                    fdb     $0000
FFF4  0000                    fdb     $0000
FFF6  0000                    fdb     $0000
FFF8  FFB2                    fdb     1b              ; irq vector
FFFA  0000                    fdb     $0000
FFFC  0000                    fdb     $0000
FFFE  FF17                    fdb     reset           ; reset vector
